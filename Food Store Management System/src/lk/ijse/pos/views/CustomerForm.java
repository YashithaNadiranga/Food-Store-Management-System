/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.pos.views;

import java.awt.Color;
import java.awt.Font;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import lk.ijse.pos.controller.CustomerFormController;
import lk.ijse.pos.dto.CustomerDTO;

/**
 *
 * @author Yashitha Nadiranga
 */
public class CustomerForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form HomeForm
     */
    public CustomerForm() {
        initComponents();
        setUI();
        loadAll();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtCname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCtp = new javax.swing.JTextField();
        btnDelete = new keeptoo.KButton();
        btnSave = new keeptoo.KButton();
        btnClear = new keeptoo.KButton();
        btnUpdate = new keeptoo.KButton();
        jLabel4 = new javax.swing.JLabel();
        txtStp = new javax.swing.JTextField();
        txtFoodID4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(990, 570));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Telephone No", "Customer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.setSelectionBackground(new java.awt.Color(50, 51, 53));
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomer);
        if (tblCustomer.getColumnModel().getColumnCount() > 0) {
            tblCustomer.getColumnModel().getColumn(0).setResizable(false);
            tblCustomer.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 950, 320));

        jLabel2.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel2.setText("Cust Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        txtCname.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        txtCname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(184, 14, 61)));
        jPanel1.add(txtCname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 310, -1));

        jLabel3.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel3.setText("Cust_TP");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        txtCtp.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        txtCtp.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(184, 14, 61)));
        jPanel1.add(txtCtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 310, -1));

        btnDelete.setText("Delete");
        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setkAllowGradient(false);
        btnDelete.setkBackGroundColor(new java.awt.Color(221, 48, 48));
        btnDelete.setkHoverColor(new java.awt.Color(221, 15, 48));
        btnDelete.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDelete.setkHoverStartColor(new java.awt.Color(30, 133, 242));
        btnDelete.setkPressedColor(new java.awt.Color(221, 48, 48));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 150, -1, -1));

        btnSave.setText("Save");
        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setkAllowGradient(false);
        btnSave.setkBackGroundColor(new java.awt.Color(33, 150, 83));
        btnSave.setkHoverColor(new java.awt.Color(38, 137, 66));
        btnSave.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSave.setkHoverStartColor(new java.awt.Color(30, 133, 242));
        btnSave.setkPressedColor(new java.awt.Color(33, 150, 83));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, -1, -1));

        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(24, 133, 242));
        btnClear.setkHoverColor(new java.awt.Color(0, 98, 204));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.setkHoverStartColor(new java.awt.Color(30, 133, 242));
        btnClear.setkPressedColor(new java.awt.Color(24, 133, 242));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(255, 215, 71));
        btnUpdate.setkHoverColor(new java.awt.Color(255, 231, 71));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.setkHoverStartColor(new java.awt.Color(30, 133, 242));
        btnUpdate.setkPressedColor(new java.awt.Color(255, 215, 71));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel4.setText("Search By TP");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, -1, -1));

        txtStp.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        txtStp.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(184, 14, 61)));
        txtStp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStpKeyReleased(evt);
            }
        });
        jPanel1.add(txtStp, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 270, -1));

        txtFoodID4.setEditable(false);
        txtFoodID4.setBackground(new java.awt.Color(255, 255, 255));
        txtFoodID4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        txtFoodID4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(184, 14, 61)));
        jPanel1.add(txtFoodID4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 270, -1));

        jLabel5.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        jLabel5.setText("Serch By Name");
        jLabel5.setEnabled(false);
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       sendData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateData();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtStpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStpKeyReleased
        searchData();
    }//GEN-LAST:event_txtStpKeyReleased

    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        int r = tblCustomer.getSelectedRow();
        String id = tblCustomer.getValueAt(r, 0).toString();
        String name = tblCustomer.getValueAt(r, 1).toString();
        txtCtp.setText(id);
        txtCname.setText(name);
    }//GEN-LAST:event_tblCustomerMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtCtp.setText("");
        txtCname.setText("");
        txtStp.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void setUI() {
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        tblCustomer.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblCustomer.getTableHeader().setOpaque(false);
        tblCustomer.getTableHeader().setBackground(new Color(184, 14, 61));
        tblCustomer.getTableHeader().setForeground(new Color(255, 255, 255));
        tblCustomer.getTableHeader().setBorder(new LineBorder(Color.white));
        tblCustomer.setRowHeight(30);
        jScrollPane1.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        
        Color ivory = new Color(255, 255, 255);
        tblCustomer.setOpaque(true);
        tblCustomer.setFillsViewportHeight(true);
        tblCustomer.setBackground(ivory);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnDelete;
    private keeptoo.KButton btnSave;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtCname;
    private javax.swing.JTextField txtCtp;
    private javax.swing.JTextField txtFoodID4;
    private javax.swing.JTextField txtStp;
    // End of variables declaration//GEN-END:variables

    private void sendData() {
        try {
            CustomerDTO cust = new CustomerDTO(
                    txtCtp.getText(),
                    txtCname.getText()
            );
            
            if(new CustomerFormController().sendData(cust)){
                JOptionPane.showMessageDialog(this, "Data Saved Successfully!");
                loadAll();
            }else{
                JOptionPane.showMessageDialog(this, "Something went wrong!!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateData() {
        try {
            CustomerDTO cust = new CustomerDTO(
                    txtCtp.getText(),
                    txtCname.getText()
            );
            
            if(new CustomerFormController().updateData(cust)){
                JOptionPane.showMessageDialog(this, "Data updated Successfully!");
                loadAll();
            }else{
                JOptionPane.showMessageDialog(this, "Something went wrong!!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteData() {
        try {
            String id = txtCtp.getText();
            if(new CustomerFormController().deleteData(id)){
                JOptionPane.showMessageDialog(this, "Data Deleted Successfully!");
                loadAll();
            }else{
                JOptionPane.showMessageDialog(this, "Something went wrong!!");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAll() {
        try {
            List<CustomerDTO> list = new CustomerFormController().getData();
            DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
            model.setRowCount(0);
            for (CustomerDTO customerDTO : list) {
                model.addRow(new Object[]{customerDTO.getTp(),customerDTO.getName()});
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void searchData() {
        try {
            String tp = txtStp.getText();
            List<CustomerDTO> list = new CustomerFormController().getSearchData(tp);
            DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
            model.setRowCount(0);
            for (CustomerDTO customerDTO : list) {
                model.addRow(new Object[]{customerDTO.getTp(),customerDTO.getName()});
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
